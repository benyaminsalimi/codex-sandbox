name: Backfill All Codex Versions

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run - check what would be built without actually building'
        required: false
        default: false
        type: boolean

jobs:
  backfill-versions:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v5
      - name: Login to DockerHub
        if: ${{ !inputs.dry_run }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Backfill all Codex versions
        run: |
          #!/bin/bash
          set -e
          
          # All stable Codex versions to build
          VERSIONS=(
            "0.2.0" "0.3.0" "0.4.0" "0.5.0" "0.6.0" "0.7.0" "0.8.0" "0.9.0"
            "0.10.0" "0.11.0" "0.12.0" "0.13.0" "0.14.0" "0.16.0" "0.19.0"
            "0.20.0" "0.21.0" "0.22.0" "0.23.0" "0.24.0" "0.25.0" "0.26.0"
            "0.27.0" "0.28.0" "0.29.0" "0.30.0" "0.31.0" "0.32.0" "0.33.0"
            "0.34.0" "0.36.0" "0.38.0"
          )
          
          platforms="linux/amd64,linux/arm64"
          dry_run="${{ inputs.dry_run }}"
          built_count=0
          skipped_count=0
          
          echo "🎯 Starting backfill process..."
          echo "📋 Total versions to check: ${#VERSIONS[@]}"
          echo "🔧 Dry run mode: ${dry_run}"
          echo ""
          
          for version in "${VERSIONS[@]}"; do
            image_name="benyamin/codex-sandbox:${version}"
            
            echo "🔍 Checking if ${image_name} exists..."
            if [ -z "$(DOCKER_CLI_EXPERIMENTAL=enabled docker manifest inspect "$image_name" 2> /dev/null)" ]; then
              if [ "$dry_run" = "true" ]; then
                echo "📝 [DRY RUN] Would build ${image_name}"
                ((built_count++))
              else
                echo "🚀 Building ${image_name}..."
                docker buildx build \
                  --platform "$platforms" \
                  --build-arg "CODEX_VERSION=${version}" \
                  -t "$image_name" --push .
                echo "✅ Successfully built and pushed ${image_name}"
                ((built_count++))
              fi
            else
              echo "⏭️  ${image_name} already exists, skipping..."
              ((skipped_count++))
            fi
            echo ""
          done
          
          echo "📊 Backfill Summary:"
          echo "   🚀 Built/Would build: ${built_count} images"
          echo "   ⏭️  Skipped (existing): ${skipped_count} images"
          echo "   📋 Total processed: ${#VERSIONS[@]} versions"
          
          if [ "$dry_run" = "true" ]; then
            echo ""
            echo "🔍 This was a dry run. No images were actually built."
            echo "   Run again without dry_run to build the missing images."
          else
            echo ""
            echo "🎉 Backfill complete!"
          fi
