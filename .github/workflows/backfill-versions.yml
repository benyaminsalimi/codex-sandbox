name: Backfill All Codex Versions (Parallel)

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run - check what would be built without actually building'
        required: false
        default: false
        type: boolean

jobs:
  trigger-builds:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [
          "0.3.0", "0.4.0", "0.5.0", "0.6.0", "0.7.0", "0.8.0", "0.9.0",
          "0.10.0", "0.11.0", "0.12.0", "0.13.0", "0.14.0", "0.16.0", "0.19.0",
          "0.20.0", "0.21.0", "0.22.0", "0.23.0", "0.24.0", "0.25.0", "0.26.0",
          "0.27.0", "0.28.0", "0.29.0", "0.30.0", "0.31.0", "0.32.0", "0.33.0",
          "0.34.0", "0.36.0", "0.38.0"
        ]
      max-parallel: 10  # Limit concurrent builds to avoid overwhelming the system
      fail-fast: false  # Continue building other versions even if one fails
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Trigger build for version ${{ matrix.version }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ matrix.version }}';
            const dryRun = '${{ inputs.dry_run }}';
            
            console.log(`🚀 Triggering build for version ${version}`);
            console.log(`🔧 Dry run mode: ${dryRun}`);
            
            try {
              const response = await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'build-single-version.yml',
                ref: context.ref,
                inputs: {
                  version: version,
                  dry_run: dryRun
                }
              });
              
              console.log(`✅ Successfully triggered build workflow for version ${version}`);
              console.log(`   Response status: ${response.status}`);
            } catch (error) {
              console.log(`❌ Failed to trigger build for version ${version}`);
              console.log(`   Error: ${error.message}`);
              core.setFailed(`Failed to trigger build for version ${version}: ${error.message}`);
            }
  
  summary:
    runs-on: ubuntu-latest
    needs: trigger-builds
    if: always()  # Run even if some builds fail
    
    steps:
      - name: Build Summary
        run: |
          echo "📊 Parallel Backfill Summary:"
          echo "   🎯 Total versions processed: 31"
          echo "   🚀 All version builds have been triggered in parallel"
          echo "   🔧 Dry run mode: ${{ inputs.dry_run }}"
          echo ""
          echo "💡 Check the 'Actions' tab to monitor individual version builds"
          echo "   Each version is being built in a separate workflow run"
          
          if [ "${{ inputs.dry_run }}" = "true" ]; then
            echo ""
            echo "🔍 This was a dry run. No images were actually built."
            echo "   Run again without dry_run to build the missing images."
          else
            echo ""
            echo "🎉 All build workflows have been triggered!"
          fi
